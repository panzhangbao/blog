import{_ as a,o as e,c as i,d as l}from"./app-JQ9X4zlU.js";const r={},t=l('<h3 id="alibaba-java-coding-guidelines" tabindex="-1"><a class="header-anchor" href="#alibaba-java-coding-guidelines" aria-hidden="true">#</a> Alibaba Java Coding Guidelines</h3><ul><li>阿里巴巴出品的java代码规范插件，可以扫描整个项目找到不规范的地方，并且大部分可以自动修复</li></ul><h3 id="auto-filling-java-call-arguments-高效写代码" tabindex="-1"><a class="header-anchor" href="#auto-filling-java-call-arguments-高效写代码" aria-hidden="true">#</a> Auto filling Java call arguments 高效写代码</h3><ul><li>开发中，在调用其它方法时，需要手动填充入参，当参数较多时，手动单个填充就非常浪费时间。但是绝大多数情况下，上下文代码中变量名称和该方法入参名称是一致的，安装完该插件以后，调用一个方法时，使用Alt + Enter快捷键，调出 “Auto fill call parameters” 便可自动填充入参。</li></ul><h3 id="arthas-idea" tabindex="-1"><a class="header-anchor" href="#arthas-idea" aria-hidden="true">#</a> arthas idea</h3><ul><li>Arthas是阿里开源的一款强大的java在线诊断工具</li></ul><h3 id="camelcase" tabindex="-1"><a class="header-anchor" href="#camelcase" aria-hidden="true">#</a> CamelCase</h3><ul><li>驼峰命名和下划线命名转换</li><li>这几种风格的命名方式，用快捷键 ⇧ + ⌥ + U / Shift + Alt + U可以进行快速转换，当我们需要修改大量变量名称的时候很方便。</li></ul><h3 id="codeglance" tabindex="-1"><a class="header-anchor" href="#codeglance" aria-hidden="true">#</a> CodeGlance</h3><ul><li>在编辑区的右侧显示的代码地图</li></ul><h3 id="codota" tabindex="-1"><a class="header-anchor" href="#codota" aria-hidden="true">#</a> Codota</h3><ul><li>只要打出首字母就能联想出一整条语句，还显示了每条语句使用频率</li></ul><h3 id="file-expander" tabindex="-1"><a class="header-anchor" href="#file-expander" aria-hidden="true">#</a> File Expander</h3><ul><li>它能在Idea里直接打开Jar包，并且反编译代码查看。甚至于能打开tar.gz，zip等压缩格式</li></ul><h3 id="key-promoter-x" tabindex="-1"><a class="header-anchor" href="#key-promoter-x" aria-hidden="true">#</a> Key Promoter X</h3><ul><li>无鼠标开发是提高生产力的终极工具，可以事半功倍！但是学习和养成使用快捷键的习惯或许是个漫长曲折的过程。</li><li>Key Promoter X插件通过在IDE中的每个元素上点击时显示您本可以使用的快捷键，帮助学习快捷键。</li><li>还会提供您最常使用的鼠标操作和相应的键盘快捷键的排行榜。</li></ul><h3 id="lombok" tabindex="-1"><a class="header-anchor" href="#lombok" aria-hidden="true">#</a> lombok</h3><ul><li>支持lombok的各种注解，从此不用写getter setter这些 可以把注解还原为原本的java代码 非常方便</li></ul><h3 id="maven-helper" tabindex="-1"><a class="header-anchor" href="#maven-helper" aria-hidden="true">#</a> Maven Helper</h3><ul><li>排查Jar包依赖</li></ul><h3 id="maven-search" tabindex="-1"><a class="header-anchor" href="#maven-search" aria-hidden="true">#</a> maven-search</h3><ul><li>这款插件，就无需你来回跳转，直接把中央仓库的查找集成到了Idea里面。你只需要打开这款插件，输入jar包的名字或者gav关键字，就能查到到这个jar包所有的版本，然后可以直接复制gav坐标。方便又快捷，干净又卫生！</li></ul><h3 id="mybatis-log-free" tabindex="-1"><a class="header-anchor" href="#mybatis-log-free" aria-hidden="true">#</a> Mybatis Log Free</h3><ul><li>把 mybatis 输出的sql日志还原成完整的sql语句。 将日志输出的sql语句中的问号 ? 替换成真正的参数值。 通过 &quot;Tools -&gt; MyBatis Log Plugin&quot; 菜单或快捷键 &quot;Ctrl+Shift+Alt+O&quot; 启用。 点击窗口左边的 &quot;Filter&quot; 按钮，可以过滤不想要输出的sql语句。 点击窗口左边的 &quot;Format Sql&quot; 按钮，可以格式化输出的sql语句。 选中console的sql日志，右击 &quot;Restore Sql from Selection&quot; 菜单可以还原sql语句。 前提条件：输出的sql日志必须包含&quot;Preparing:&quot;和&quot;Parameters:&quot;才能正常解析。</li></ul><h3 id="mybatisx" tabindex="-1"><a class="header-anchor" href="#mybatisx" aria-hidden="true">#</a> MybatisX</h3><ul><li>一款全免费且强大的 IDEA 插件，支持跳转，自动补全生成 SQL，代码生成</li></ul><h3 id="string-manipulation" tabindex="-1"><a class="header-anchor" href="#string-manipulation" aria-hidden="true">#</a> String Manipulation</h3><ul><li>如果经常需要处理大量文本并对其进行格式化，那么使用String Manipulation插件会大幅提高开发效率。</li><li>该插件提供了各种字符串处理功能，包括过滤、排序、大小写转换，以及改变编码风格（例如切换为驼峰命名）或编码方式（例如转换为十六进制，还可以将非ASCII字符转换为Unicode）等。</li><li>此外，它还能够通过单个操作对字符串的所有行进行批量编辑。</li></ul><h3 id="translation" tabindex="-1"><a class="header-anchor" href="#translation" aria-hidden="true">#</a> Translation</h3><ul><li>最好用的翻译插件，功能很强大，界面很漂亮</li></ul>',30),n=[t];function h(d,o){return e(),i("div",null,n)}const u=a(r,[["render",h],["__file","IDEAchangyongchajian.html.vue"]]);export{u as default};
